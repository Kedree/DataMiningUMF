# -*- coding: utf-8 -*-
"""DATAHW2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yLnggtz5Qcgq-bpm9nU959wYReyZBp59

2. Write a program in any language which can compute Manhattan and Euclidean distances between any two given vec-
tors with any length. You can pass the length to your function, but please donâ€™t limit the dimension to 2. You can test
your function on vectors you fill in your code without asking user input. (25/20 points)
"""

from math import sqrt as sqrt

def distance(v1, v2, h):
    return((sum(abs(x-y)**h for x,y in zip(v1, v2)))**(1/h))

v1 = [1, 2, 3]
v2 = [3, 4, 5]

print("Manhatten Distance for h = 1:\t{}\nEuclidean Distance for h = 2:\t{}\nMinkowski Distance for h = 3:\t{}\nMinkowski Distance for h = 4:\t{}". format(*list((round(distance(v1,v2,h),2) for h in [1,2,3, 4]))))

